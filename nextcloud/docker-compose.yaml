version: "3.8"

volumes:
  db:
  app:

services:
  db:
    image: postgres:14-alpine
    container_name: nextcloud_db
    restart: unless-stopped
    volumes:
      - type: bind # using the long syntax to fail container start if source is missing
        source: ./data/db/
        target: /var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=nextcloud_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password

  nextcloud:
    image: nextcloud:21
    container_name: nextcloud
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - type: bind # using the long syntax to fail container start if source is missing
        source: ./data/app/
        target: /var/www/html/
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST="nextcloud.lan"
      - VIRTUAL_PORT="8000"
      - POSTGRES_HOST=db
      - POSTGRES_DB=nextcloud_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.lan
    secrets:
      - postgres_password
      - postgres_user
      - nextcloud_admin_password
      - nextcloud_admin_user

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  postgres_user:
    file: ./secrets/postgres_user.txt
  nextcloud_admin_password:
    file: ./secrets/nextcloud_admin_password.txt
  nextcloud_admin_user:
    file: ./secrets/nextcloud_admin_user.txt
